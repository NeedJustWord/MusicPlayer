<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:MusicPlayer.Controls"
                    xmlns:converters="clr-namespace:MusicPlayer.Converters"
                    xmlns:root="clr-namespace:MusicPlayer">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ControlStyle.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <converters:OpacityToCheckedConverter x:Key="OpacityToCheckedConverter"/>

    <Style x:Key="BaseWindowButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Width" Value="18"/>
        <Setter Property="Height" Value="14"/>
        <Setter Property="controls:IconElement.Width" Value="18"/>
        <Setter Property="controls:IconElement.Height" Value="14"/>
        <Setter Property="controls:IconElement.Color" Value="{StaticResource WindowIconColorBrush}"/>
    </Style>

    <!-- Close Button -->
    <Style x:Key="CloseButton" TargetType="Button" BasedOn="{StaticResource BaseWindowButtonStyle}">
        <Setter Property="Width" Value="17"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="controls:IconElement.Width" Value="17"/>
        <Setter Property="controls:IconElement.Height" Value="16"/>
        <Setter Property="controls:IconElement.Icon" Value="{StaticResource CloseGeometry}"/>
        <Setter Property="controls:IconTriggerElement.MouseOverBackground" Value="{StaticResource CloseButtonMouseOverBackgroundBrush}"/>
        <Setter Property="controls:IconTriggerElement.PressedBackground" Value="{StaticResource CloseButtonPressedBackgroundBrush}"/>
        <Setter Property="controls:OffsetElement.IsOffset" Value="False"/>
        <Setter Property="Margin" Value="0,0,10,0" />
    </Style>

    <!-- Minimize Button -->
    <Style x:Key="MinButton" TargetType="Button" BasedOn="{StaticResource BaseWindowButtonStyle}">
        <Setter Property="controls:IconElement.Icon" Value="{StaticResource MinGeometry}"/>
    </Style>

    <!-- MiniStyle Button -->
    <Style x:Key="MiniStyleButton" TargetType="Button" BasedOn="{StaticResource BaseWindowButtonStyle}">
        <Setter Property="controls:IconElement.Icon" Value="{StaticResource MiniStyleGeometry}"/>
    </Style>

    <!-- Menu Button -->
    <Style x:Key="MenuButton" TargetType="controls:MenuButton" BasedOn="{StaticResource BaseWindowButtonStyle}">
        <Setter Property="controls:IconElement.Icon" Value="{StaticResource MenuGeometry}"/>
        <Setter Property="Placement" Value="Bottom"/>
    </Style>

    <!-- Caption TextBlock-->
    <Style x:Key="CaptionTextBlock" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockFont}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10,0,0,0"/>
    </Style>

    <Style x:Key="BaseWindowBorderStyle" TargetType="Border">
        <Setter Property="CornerRadius" Value="6, 6, 3, 3" />
        <Setter Property="Background" Value="#818181" />
        <Setter Property="BorderBrush" Value="#101010" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="1"/>
    </Style>

    <ControlTemplate x:Key="BaseWindowControlTemplate" TargetType="controls:BaseWindow">
        <Grid>
            <Border Name="BaseWindowBorder" Style="{StaticResource BaseWindowBorderStyle}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <!-- The title bar. -->
                    <Border Name="TitleBar" Height="20" CornerRadius="6, 6, 0, 0">
                        <Border.Background>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                <GradientStop Color="#606062"/>
                                <GradientStop Color="#3c3d3f" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>

                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Column="0" Orientation="Horizontal">
                            <TextBlock Style="{StaticResource CaptionTextBlock}" Text="{Binding Caption,RelativeSource={RelativeSource TemplatedParent}}"/>
                        </StackPanel>
                        <StackPanel Grid.Column="1" Orientation="Horizontal">
                            <controls:MenuButton x:Name="BtnMenu" Style="{StaticResource MenuButton}">
                                <Button.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="透明度">
                                            <MenuItem Header="100%"
                                                      IsChecked="{TemplateBinding Opacity,Converter={StaticResource OpacityToCheckedConverter},ConverterParameter=1}"
                                                      Command="{Binding SetOpacityCommand,RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="1"/>
                                            <MenuItem Header="90%"
                                                      IsChecked="{TemplateBinding Opacity,Converter={StaticResource OpacityToCheckedConverter},ConverterParameter=0.9}"
                                                      Command="{Binding SetOpacityCommand,RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="0.9"/>
                                            <MenuItem Header="80%"
                                                      IsChecked="{TemplateBinding Opacity,Converter={StaticResource OpacityToCheckedConverter},ConverterParameter=0.8}"
                                                      Command="{Binding SetOpacityCommand,RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="0.8"/>
                                            <MenuItem Header="70%"
                                                      IsChecked="{TemplateBinding Opacity,Converter={StaticResource OpacityToCheckedConverter},ConverterParameter=0.7}"
                                                      Command="{Binding SetOpacityCommand,RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="0.7"/>
                                            <MenuItem Header="60%"
                                                      IsChecked="{TemplateBinding Opacity,Converter={StaticResource OpacityToCheckedConverter},ConverterParameter=0.6}"
                                                      Command="{Binding SetOpacityCommand,RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="0.6"/>
                                            <MenuItem Header="50%"
                                                      IsChecked="{TemplateBinding Opacity,Converter={StaticResource OpacityToCheckedConverter},ConverterParameter=0.5}"
                                                      Command="{Binding SetOpacityCommand,RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="0.5"/>
                                            <MenuItem Header="40%"
                                                      IsChecked="{TemplateBinding Opacity,Converter={StaticResource OpacityToCheckedConverter},ConverterParameter=0.4}"
                                                      Command="{Binding SetOpacityCommand,RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="0.4"/>
                                            <MenuItem Header="30%"
                                                      IsChecked="{TemplateBinding Opacity,Converter={StaticResource OpacityToCheckedConverter},ConverterParameter=0.3}"
                                                      Command="{Binding SetOpacityCommand,RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="0.3"/>
                                            <MenuItem Header="20%"
                                                      IsChecked="{TemplateBinding Opacity,Converter={StaticResource OpacityToCheckedConverter},ConverterParameter=0.2}"
                                                      Command="{Binding SetOpacityCommand,RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="0.2"/>
                                            <MenuItem Header="10%"
                                                      IsChecked="{TemplateBinding Opacity,Converter={StaticResource OpacityToCheckedConverter},ConverterParameter=0.1}"
                                                      Command="{Binding SetOpacityCommand,RelativeSource={RelativeSource TemplatedParent}}" CommandParameter="0.1"/>
                                        </MenuItem>
                                        <MenuItem Header="自动播放"
                                                  IsChecked="{Binding Source={x:Static root:GlobalInfo.ConfigInfo},Path=AutoPlay}"
                                                  Command="{Binding AutoPlayCommand,RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <MenuItem Header="关于" Command="{Binding AboutCommand,RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </ContextMenu>
                                </Button.ContextMenu>
                            </controls:MenuButton>
                            <Button x:Name="BtnMiniStyle" Style="{StaticResource MiniStyleButton}"/>
                            <Button x:Name="BtnMin" Style="{StaticResource MinButton}"/>
                            <Button x:Name="BtnClose" Style="{StaticResource CloseButton}"/>
                        </StackPanel>
                    </Grid>

                    <Grid Grid.Row="1">
                        <AdornerDecorator>
                            <ContentPresenter/>
                        </AdornerDecorator>
                    </Grid>
                </Grid>
            </Border>
        </Grid>
    </ControlTemplate>

    <Style x:Key="BaseWindowStyle" TargetType="controls:BaseWindow">
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="PullOverHide" Value="False"/>
        <Setter Property="HaveCloseButton" Value="True"/>
        <Setter Property="HaveMenuButton" Value="True"/>
        <Setter Property="HaveMinButton" Value="True"/>
        <Setter Property="HaveMiniStyleButton" Value="True"/>
        <Setter Property="Template" Value="{StaticResource BaseWindowControlTemplate}" />
    </Style>
</ResourceDictionary>